import sys
import matplotlib.pyplot as plt
from pyspark.sql.functions import lit
assert sys.version_info >= (3, 5) # make sure we have Python 3.5+
import geopandas as gpd
import contextily as ctx
from shapely.geometry import Point
import folium
from folium.plugins import HeatMap


from pyspark.sql import SparkSession, functions, types, Row
spark = SparkSession.builder.appName('OSM point of interest extracter').getOrCreate()
assert spark.version >= '2.4' # make sure we have Spark 2.4+
spark.sparkContext.setLogLevel('WARN')

data_scheme = types.StructType([
    types.StructField('lat', types.DoubleType(), nullable=False),
    types.StructField('lon', types.DoubleType(), nullable=False),
    types.StructField('timestamp', types.TimestampType(), nullable=False),
    types.StructField('amenity', types.StringType(), nullable=False),
    types.StructField('name', types.StringType(), nullable=True),
    types.StructField('tags', types.MapType(types.StringType(), types.StringType()), nullable=False),
    types.StructField('is_franchise', types.BooleanType(), nullable=False),
])
    

def main():
    coordinate_data = spark.read.csv("../CMPT353_project/data/save_coordinate.csv").toDF('name','lat', 'lon', 'is_franchise')
    
    non_franchise_data = coordinate_data.filter(coordinate_data['is_franchise'] == False)
    franchise_data = coordinate_data.filter(coordinate_data['is_franchise'] == True)

    non_franchise_data = non_franchise_data.toPandas()
    franchise_data = franchise_data.toPandas()
    # all_data = coordinate_data.toPandas()

    
    non_franchise_data['lon'] = non_franchise_data['lon'].astype('float')
    non_franchise_data['lat'] = non_franchise_data['lat'].astype('float')
    franchise_data['lon'] = franchise_data['lon'].astype('float')
    franchise_data['lat'] = franchise_data['lat'].astype('float')

    non_franchise_data_count = non_franchise_data.groupby(['name'])['name'].agg('count').reset_index(name='counts')
    # print(non_franchise_data_count)

    franchise_data_count = franchise_data.groupby(['name'])['name'].agg('count').reset_index(name='counts')
    # print(franchise_data_count)

    plt.figure()

    plt.plot(non_franchise_data_count['counts'], color='red')
    plt.plot(franchise_data_count['counts'], color='blue')
    plt.title("All type locations")
    plt.xlabel("individual locations")
    plt.ylabel("count")
    plt.legend(['Non franchised data', 'Franchised data'])
    plt.savefig('../CMPT353_project/data/all_type_data_count_comparison.png')

    # inspired by 
    hmap = folium.Map(location=[49.2, -122.7], zoom_start=11)
    hm_wide = HeatMap( list(zip(franchise_data['lat'].values, franchise_data['lon'].values)), min_opacity=0.2, radius=17, blur=15, max_zoom=1)
    hmap.add_child(hm_wide)
    hmap.save('../CMPT353_project/data/heat_map.html')

    

if __name__ == '__main__':
    main()